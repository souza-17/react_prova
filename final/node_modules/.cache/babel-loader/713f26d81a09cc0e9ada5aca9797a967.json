{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\T-Gamer\\\\Desktop\\\\final\\\\src\\\\pages\\\\Users.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport api from '../api';\nimport { Context } from '../Context/AuthContext';\nimport history from '../history';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Icon from '@material-ui/core/Icon';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Layout from './template/Layout';\n\nasync function add() {\n  history.push({\n    pathname: '/adicionarPaciente'\n  });\n}\n\nasync function update(paciente_id) {\n  try {\n    const response = await api.post('/users/login', {\n      userName,\n      password\n    });\n    const nome = response.data.name;\n    localStorage.setItem('name', JSON.stringify(response.data.name));\n    localStorage.setItem('id', JSON.stringify(response.data.id)); // api.defaults.headers.Authorization = `Bearer ${token}`;\n\n    setAuthenticated(true);\n    history.push({\n      pathname: '/Users',\n      state: nome\n    });\n  } catch (err) {\n    alert(\"Erro no login! verifique seus dados \");\n  } // history.push({\n  //   pathname: '/editarPaciente/1',\n  //   state: paciente_id,\n  // });\n\n}\n\nasync function remove(paciente_id) {\n  history.push({\n    pathname: '/editarPaciente/1',\n    state: paciente_id\n  });\n}\n\nexport default function Users(usuario) {\n  const {\n    handleLogout\n  } = useContext(Context);\n  const [usuario_id, setUsuario] = useState(usuario);\n  const [pacientes, setPacientes] = useState([]);\n  const id = \"\";\n  useEffect(() => {\n    (async () => {\n      const id = localStorage.getItem('id');\n      const name = localStorage.getItem('name');\n      console.log(usuario_id.location.state);\n      console.log(usuario_id);\n      const {\n        data\n      } = await api.get('/pacientes');\n      setPacientes(data);\n    })();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, pacientes.map(paciente => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, paciente.nome, \" (\", paciente.cpf, \")\", /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: alert(paciente.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Adicionar\")))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Sair\"));\n}","map":{"version":3,"sources":["C:/Users/T-Gamer/Desktop/final/src/pages/Users.js"],"names":["React","useState","useEffect","useContext","api","Context","history","Button","makeStyles","DeleteIcon","Icon","SaveIcon","Layout","add","push","pathname","update","paciente_id","response","post","userName","password","nome","data","name","localStorage","setItem","JSON","stringify","id","setAuthenticated","state","err","alert","remove","Users","usuario","handleLogout","usuario_id","setUsuario","pacientes","setPacientes","getItem","console","log","location","get","map","paciente","cpf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport api from '../api';\nimport { Context } from '../Context/AuthContext';\nimport history from '../history';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Icon from '@material-ui/core/Icon';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Layout from './template/Layout'\n\n\n\nasync function add() {\n  history.push({\n    pathname: '/adicionarPaciente'\n  });\n\n}\n\nasync function update(paciente_id) {\n\n  try {\n    const response = await api.post('/users/login', { userName, password });\n    \n    const nome = response.data.name;\n\n    localStorage.setItem('name', JSON.stringify(response.data.name));\n    localStorage.setItem('id', JSON.stringify(response.data.id));\n    // api.defaults.headers.Authorization = `Bearer ${token}`;\n    setAuthenticated(true);\n    history.push({\n      pathname: '/Users',\n      state: nome,\n    });\n  } catch (err) {\n    alert(\"Erro no login! verifique seus dados \");\n  } \n\n\n  // history.push({\n  //   pathname: '/editarPaciente/1',\n  //   state: paciente_id,\n  // });\n\n}\n\nasync function remove(paciente_id) {\n  history.push({\n    pathname: '/editarPaciente/1',\n    state: paciente_id,\n  });\n\n}\n\n\nexport default function Users(usuario) {\n  const { handleLogout } = useContext(Context);\n  const [usuario_id, setUsuario ] = useState(usuario);\n  const [pacientes, setPacientes] = useState([]);\n  const id = \"\";\n\n\n  useEffect(() => {\n    (async () => {\n      const id = localStorage.getItem('id');\n      const name = localStorage.getItem('name');\n\n      console.log(usuario_id.location.state);\n      console.log(usuario_id);\n      const { data } = await api.get('/pacientes');\n\n      setPacientes(data);\n    })();\n  }, []);\n\n  return (\n    <>\n      <Layout /> \n      <ul>\n        {pacientes.map((paciente) => (\n          <li>\n            {paciente.nome} ({paciente.cpf})\n            <button type=\"button\" onClick={alert(paciente.id)}>Adicionar</button> \n          </li>\n        ))}\n      </ul>\n      <button type=\"button\" onClick={add}>Adicionar</button>    \n      <button type=\"button\" onClick={handleLogout}>Sair</button>\n    </> \n  );\n}\n"]},"metadata":{},"sourceType":"module"}