{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport api from '../../api';\nimport history from '../../history';\nexport default function useAuth() {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      api.defaults.headers.Authorization = `Bearer ${JSON.parse(token)}`;\n      setAuthenticated(true);\n    }\n\n    setLoading(false);\n  }, []);\n\n  async function handleLogin(dados) {\n    const userName = dados.login;\n    const password = dados.password;\n\n    try {\n      const {\n        data: {\n          name,\n          id\n        }\n      } = await api.post('/users/login', {\n        userName,\n        password\n      });\n    } catch (err) {\n      alert(\"Erro no login! verifique seus dados\");\n    } finally {\n      localStorage.setItem('name', JSON.stringify(name));\n      localStorage.setItem('id', JSON.stringify(id)); // api.defaults.headers.Authorization = `Bearer ${token}`;\n\n      setAuthenticated(true);\n      history.push('/users');\n    }\n  }\n\n  function handleLogout() {\n    setAuthenticated(false);\n    localStorage.removeItem('token');\n    api.defaults.headers.Authorization = undefined;\n    history.push('/login');\n  }\n\n  return {\n    authenticated,\n    loading,\n    handleLogin,\n    handleLogout\n  };\n}","map":{"version":3,"sources":["C:/Users/T-Gamer/Desktop/final/src/Context/hooks/useAuth.js"],"names":["useState","useEffect","api","history","useAuth","authenticated","setAuthenticated","loading","setLoading","token","localStorage","getItem","defaults","headers","Authorization","JSON","parse","handleLogin","dados","userName","login","password","data","name","id","post","err","alert","setItem","stringify","push","handleLogout","removeItem","undefined"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAIF,KAAJ,EAAW;AACTP,MAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASC,IAAI,CAACC,KAAL,CAAWP,KAAX,CAAkB,EAAjE;AACAH,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;;AAEDE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GATQ,EASN,EATM,CAAT;;AAWA,iBAAeS,WAAf,CAA2BC,KAA3B,EAAkC;AAEhC,UAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAvB;AACA,UAAMC,QAAQ,GAAGH,KAAK,CAACG,QAAvB;;AAEA,QAAI;AACF,YAAM;AAAEC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR;AAAR,UAAyB,MAAMtB,GAAG,CAACuB,IAAJ,CAAS,cAAT,EAAyB;AAAEN,QAAAA,QAAF;AAAYE,QAAAA;AAAZ,OAAzB,CAArC;AACD,KAFD,CAEE,OAAOK,GAAP,EAAY;AACZC,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACD,KAJD,SAIU;AACRjB,MAAAA,YAAY,CAACkB,OAAb,CAAqB,MAArB,EAA6Bb,IAAI,CAACc,SAAL,CAAeN,IAAf,CAA7B;AACAb,MAAAA,YAAY,CAACkB,OAAb,CAAqB,IAArB,EAA2Bb,IAAI,CAACc,SAAL,CAAeL,EAAf,CAA3B,EAFQ,CAGR;;AACAlB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAH,MAAAA,OAAO,CAAC2B,IAAR,CAAa,QAAb;AACD;AAEF;;AAED,WAASC,YAAT,GAAwB;AACtBzB,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAI,IAAAA,YAAY,CAACsB,UAAb,CAAwB,OAAxB;AACA9B,IAAAA,GAAG,CAACU,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAqCmB,SAArC;AACA9B,IAAAA,OAAO,CAAC2B,IAAR,CAAa,QAAb;AACD;;AAED,SAAO;AAAEzB,IAAAA,aAAF;AAAiBE,IAAAA,OAAjB;AAA0BU,IAAAA,WAA1B;AAAuCc,IAAAA;AAAvC,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport api from '../../api';\nimport history from '../../history';\n\nexport default function useAuth() {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      api.defaults.headers.Authorization = `Bearer ${JSON.parse(token)}`;\n      setAuthenticated(true);\n    }\n\n    setLoading(false);\n  }, []);\n  \n  async function handleLogin(dados) {\n\n    const userName = dados.login\n    const password = dados.password\n\n    try {\n      const { data: { name, id } } = await api.post('/users/login', { userName, password });\n    } catch (err) {\n      alert(\"Erro no login! verifique seus dados\");\n    } finally {\n      localStorage.setItem('name', JSON.stringify(name));\n      localStorage.setItem('id', JSON.stringify(id));\n      // api.defaults.headers.Authorization = `Bearer ${token}`;\n      setAuthenticated(true);\n      history.push('/users');\n    }\n\n  }\n\n  function handleLogout() {\n    setAuthenticated(false);\n    localStorage.removeItem('token');\n    api.defaults.headers.Authorization = undefined;\n    history.push('/login');\n  }\n  \n  return { authenticated, loading, handleLogin, handleLogout };\n}"]},"metadata":{},"sourceType":"module"}